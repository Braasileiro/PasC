<?xml version="1.0" encoding="UTF-8" standalone="no"?><!--Created with JFLAP 6.4.--><structure>&#13;
	<type>fa</type>&#13;
	<automaton>&#13;
		<!--The list of states.-->&#13;
		<state id="0" name="q0">&#13;
			<x>993.0</x>&#13;
			<y>551.0</y>&#13;
			<initial/>&#13;
		</state>&#13;
		<state id="1" name="q1">&#13;
			<x>1065.0</x>&#13;
			<y>391.0</y>&#13;
		</state>&#13;
		<state id="2" name="q2">&#13;
			<x>1093.0</x>&#13;
			<y>174.0</y>&#13;
			<label>* &lt;CON_NUM, num_const&gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="3" name="q3">&#13;
			<x>1173.0</x>&#13;
			<y>279.0</y>&#13;
		</state>&#13;
		<state id="4" name="q4">&#13;
			<x>1232.0</x>&#13;
			<y>198.0</y>&#13;
		</state>&#13;
		<state id="5" name="q5">&#13;
			<x>1482.0</x>&#13;
			<y>54.0</y>&#13;
			<label>* &lt;CON_NUM, num_const&gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="6" name="q6">&#13;
			<x>1119.0</x>&#13;
			<y>408.0</y>&#13;
		</state>&#13;
		<state id="7" name="q7">&#13;
			<x>1226.0</x>&#13;
			<y>306.0</y>&#13;
		</state>&#13;
		<state id="8" name="q8">&#13;
			<x>1452.0</x>&#13;
			<y>151.0</y>&#13;
			<label>&lt;CON_CHAR, char_const&gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="9" name="q9">&#13;
			<x>1172.0</x>&#13;
			<y>434.0</y>&#13;
		</state>&#13;
		<state id="10" name="q10">&#13;
			<x>1282.0</x>&#13;
			<y>368.0</y>&#13;
		</state>&#13;
		<state id="11" name="q11">&#13;
			<x>1532.0</x>&#13;
			<y>225.0</y>&#13;
			<label>&lt;LIT, literal&gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="12" name="q12">&#13;
			<x>1230.0</x>&#13;
			<y>480.0</y>&#13;
		</state>&#13;
		<state id="13" name="q13">&#13;
			<x>1481.0</x>&#13;
			<y>322.0</y>&#13;
			<label>*  &lt;ID, id&gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="14" name="q14">&#13;
			<x>1240.0</x>&#13;
			<y>525.0</y>&#13;
		</state>&#13;
		<state id="15" name="q15">&#13;
			<x>1529.0</x>&#13;
			<y>371.0</y>&#13;
			<label>&lt;OP_EQ, '=='&gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="16" name="q16">&#13;
			<x>1478.0</x>&#13;
			<y>435.0</y>&#13;
			<label>*  &lt;OP_ASS, '='&gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="17" name="q17">&#13;
			<x>1237.0</x>&#13;
			<y>571.0</y>&#13;
		</state>&#13;
		<state id="18" name="q18">&#13;
			<x>1533.0</x>&#13;
			<y>502.0</y>&#13;
			<label>&lt;OP_GE, '&gt;='&gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="19" name="q19">&#13;
			<x>1472.0</x>&#13;
			<y>556.0</y>&#13;
			<label>*  &lt;OP_GT, '&gt;' &gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="20" name="q20">&#13;
			<x>1235.0</x>&#13;
			<y>623.0</y>&#13;
		</state>&#13;
		<state id="21" name="q21">&#13;
			<x>1523.0</x>&#13;
			<y>622.0</y>&#13;
			<label>&lt;OP_LE, '&lt;=' &gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="22" name="q22">&#13;
			<x>1461.0</x>&#13;
			<y>688.0</y>&#13;
			<label>*  &lt;OP_LT, '&lt;' &gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="23" name="q23">&#13;
			<x>1219.0</x>&#13;
			<y>682.0</y>&#13;
		</state>&#13;
		<state id="24" name="q24">&#13;
			<x>1513.0</x>&#13;
			<y>770.0</y>&#13;
			<label>&lt;OP_NE, '!=' &gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="25" name="q25">&#13;
			<x>1143.0</x>&#13;
			<y>716.0</y>&#13;
		</state>&#13;
		<state id="26" name="q30">&#13;
			<x>1181.0</x>&#13;
			<y>842.0</y>&#13;
			<label>*  &lt;OP_DIV, '/' &gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="27" name="q26">&#13;
			<x>1285.0</x>&#13;
			<y>873.0</y>&#13;
			<label>&lt;One line comment&gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="29" name="q29">&#13;
			<x>1507.0</x>&#13;
			<y>871.0</y>&#13;
			<label>&lt;Multiline comment&gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="30" name="q27">&#13;
			<x>1313.0</x>&#13;
			<y>800.0</y>&#13;
		</state>&#13;
		<state id="31" name="q28">&#13;
			<x>1433.0</x>&#13;
			<y>844.0</y>&#13;
		</state>&#13;
		<state id="32" name="q31">&#13;
			<x>907.0</x>&#13;
			<y>385.0</y>&#13;
			<label>&lt;OP_MUL, ' * ' &gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="33" name="q32">&#13;
			<x>784.0</x>&#13;
			<y>388.0</y>&#13;
			<label>&lt;OP_AD, ' + '&gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="34" name="q33">&#13;
			<x>689.0</x>&#13;
			<y>408.0</y>&#13;
			<label>&lt;OP_MIN, ' - '&gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="35" name="q34">&#13;
			<x>603.0</x>&#13;
			<y>443.0</y>&#13;
			<label>&lt;SMB_OBC, ' { '&gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="36" name="q35">&#13;
			<x>548.0</x>&#13;
			<y>516.0</y>&#13;
			<label>&lt;SMB_CBC, ' } '&gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="37" name="q36">&#13;
			<x>588.0</x>&#13;
			<y>583.0</y>&#13;
			<label>&lt;SMB_OPA, ' ( '&gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="38" name="q37">&#13;
			<x>668.0</x>&#13;
			<y>626.0</y>&#13;
			<label>&lt;SMB_CPA, ' ) '&gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="39" name="q38">&#13;
			<x>773.0</x>&#13;
			<y>668.0</y>&#13;
			<label>&lt;SMB_COM, ' , '&gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<state id="40" name="q39">&#13;
			<x>858.0</x>&#13;
			<y>701.0</y>&#13;
			<label>&lt;SMB_SEM, ' ; '&gt;</label>&#13;
			<final/>&#13;
		</state>&#13;
		<!--The list of transitions.-->&#13;
		<transition>&#13;
			<from>14</from>&#13;
			<to>16</to>&#13;
			<read>other</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>0</from>&#13;
			<to>32</to>&#13;
			<read>*</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>1</from>&#13;
			<to>3</to>&#13;
			<read>point(.)</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>0</from>&#13;
			<to>9</to>&#13;
			<read>aspas duplas(")</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>0</from>&#13;
			<to>35</to>&#13;
			<read>{</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>3</from>&#13;
			<to>4</to>&#13;
			<read>digit</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>17</from>&#13;
			<to>18</to>&#13;
			<read>=</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>25</from>&#13;
			<to>27</to>&#13;
			<read>/</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>0</from>&#13;
			<to>38</to>&#13;
			<read>)</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>10</from>&#13;
			<to>11</to>&#13;
			<read>aspas duplas(")</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>20</from>&#13;
			<to>21</to>&#13;
			<read>=</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>10</from>&#13;
			<to>10</to>&#13;
			<read>ASCII</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>27</from>&#13;
			<to>27</to>&#13;
			<read>ASCII</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>30</from>&#13;
			<to>30</to>&#13;
			<read>ASCII</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>7</from>&#13;
			<to>8</to>&#13;
			<read>aspas simples(')</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>0</from>&#13;
			<to>39</to>&#13;
			<read>v√≠rgula(,)</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>0</from>&#13;
			<to>0</to>&#13;
			<read>\r \n \t</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>31</from>&#13;
			<to>30</to>&#13;
			<read>ASCII</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>12</from>&#13;
			<to>13</to>&#13;
			<read>other</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>0</from>&#13;
			<to>1</to>&#13;
			<read>digit</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>4</from>&#13;
			<to>5</to>&#13;
			<read>other</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>25</from>&#13;
			<to>26</to>&#13;
			<read>other</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>0</from>&#13;
			<to>17</to>&#13;
			<read>&gt;</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>25</from>&#13;
			<to>30</to>&#13;
			<read>*</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>0</from>&#13;
			<to>23</to>&#13;
			<read>!</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>0</from>&#13;
			<to>12</to>&#13;
			<read>letter</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>1</from>&#13;
			<to>2</to>&#13;
			<read>other</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>14</from>&#13;
			<to>15</to>&#13;
			<read>=</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>0</from>&#13;
			<to>25</to>&#13;
			<read>/</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>1</from>&#13;
			<to>1</to>&#13;
			<read>digit</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>4</from>&#13;
			<to>4</to>&#13;
			<read>digit</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>0</from>&#13;
			<to>6</to>&#13;
			<read>aspas simples(')</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>17</from>&#13;
			<to>19</to>&#13;
			<read>other</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>0</from>&#13;
			<to>37</to>&#13;
			<read>(</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>0</from>&#13;
			<to>33</to>&#13;
			<read>+</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>9</from>&#13;
			<to>10</to>&#13;
			<read>ASCII</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>0</from>&#13;
			<to>34</to>&#13;
			<read>-</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>31</from>&#13;
			<to>29</to>&#13;
			<read>/</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>31</from>&#13;
			<to>31</to>&#13;
			<read>*</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>23</from>&#13;
			<to>24</to>&#13;
			<read>=</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>20</from>&#13;
			<to>22</to>&#13;
			<read>other</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>30</from>&#13;
			<to>31</to>&#13;
			<read>*</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>0</from>&#13;
			<to>36</to>&#13;
			<read>}</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>6</from>&#13;
			<to>7</to>&#13;
			<read>ASCII</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>0</from>&#13;
			<to>14</to>&#13;
			<read>=</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>0</from>&#13;
			<to>40</to>&#13;
			<read>ponto-virgula(;)</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>12</from>&#13;
			<to>12</to>&#13;
			<read>letter/digit</read>&#13;
		</transition>&#13;
		<transition>&#13;
			<from>0</from>&#13;
			<to>20</to>&#13;
			<read>&lt;</read>&#13;
		</transition>&#13;
		<note>&#13;
			<text>ANOTA√á√ïES::
- Os valores literal e char eu n√£o soube como
especificar os 256 caracteres da ASCII
- Os coment√°rios eu n√£o coloquei tokens
espec√≠ficos porque n√£o sei se ta certo
- Compare o modelo com o documento que o
professor mandou antes de montar as classes,
se alguma coisa estiver errada, me fale.
- O retorno do ID precisa verificar se
a palavra encontrada √© uma KeyWord
de acordo com a Tabela de S√≠mbolos
- Tabula√ß√£o s√£o 3 espa√ßos em branco
- O asterisco antes dos par√¢metros de retorno
indicam que o ponteiro volta um caractere</text>&#13;
			<x>452.0</x>&#13;
			<y>14.0</y>&#13;
		</note>&#13;
	</automaton>&#13;
</structure>